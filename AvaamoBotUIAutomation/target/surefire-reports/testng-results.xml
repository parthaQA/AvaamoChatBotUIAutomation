<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Browser Launched]]>
    </line>
    <line>
      <![CDATA[Get Started button is clicked]]>
    </line>
    <line>
      <![CDATA[Login Successful]]>
    </line>
    <line>
      <![CDATA[message sent]]>
    </line>
    <line>
      <![CDATA[pizza type is selected]]>
    </line>
    <line>
      <![CDATA[conversation reset]]>
    </line>
    <line>
      <![CDATA[message sent]]>
    </line>
    <line>
      <![CDATA[message sent]]>
    </line>
    <line>
      <![CDATA[This is failed log from reporter.log]]>
    </line>
    <line>
      <![CDATA[</br><font color='#73a9d0'>***************Screenshot Of the error****************</font>]]>
    </line>
    <line>
      <![CDATA[</br><img id='ErrorResult' src='/Users/parthasen/Documents/UI_Automation/AvaamoChatBotUIAutomation/screenshots/verifyBotResponseWhenPizzaTypeIsNotListed31/01/2024 14:43:34.pngheight='800', width='800'/>]]>
    </line>
    <line>
      <![CDATA[message sent]]>
    </line>
    <line>
      <![CDATA[pizza type is selected]]>
    </line>
    <line>
      <![CDATA[message sent]]>
    </line>
    <line>
      <![CDATA[pizza type is selected]]>
    </line>
    <line>
      <![CDATA[conversation reset]]>
    </line>
    <line>
      <![CDATA[Login Successful]]>
    </line>
    <line>
      <![CDATA[conversation reset]]>
    </line>
    <line>
      <![CDATA[Browser Closed]]>
    </line>
  </reporter-output>
  <suite started-at="2024-01-31T14:42:47 IST" name="SeleniumSuite" finished-at="2024-01-31T14:43:58 IST" duration-ms="71219">
    <groups>
    </groups>
    <test started-at="2024-01-31T14:42:47 IST" name="ChatbotTest" finished-at="2024-01-31T14:43:58 IST" duration-ms="71219">
      <class name="com.chatbot.ChatbotTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:42:47 IST" name="setup" finished-at="2024-01-31T14:42:53 IST" duration-ms="6152" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Browser Launched]]>
            </line>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyThatUserCanOrderPizzas(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:42:53 IST" name="verifyThatUserCanOrderPizzas" description="Verify that user can order  a non veg pizza" data-provider="orderPizza" finished-at="2024-01-31T14:43:27 IST" duration-ms="33698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[partha]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[partha.senuwsb@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[I would like to order a non veg pizza]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pepperoni]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thick Crust]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Medium]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Excellent]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Get Started button is clicked]]>
            </line>
            <line>
              <![CDATA[Login Successful]]>
            </line>
            <line>
              <![CDATA[message sent]]>
            </line>
            <line>
              <![CDATA[pizza type is selected]]>
            </line>
            <line>
              <![CDATA[conversation reset]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyThatUserCanOrderPizzas -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:27 IST" name="screenShot" finished-at="2024-01-31T14:43:27 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThatUserCanOrderPizzas status=SUCCESS method=ChatbotTest.verifyThatUserCanOrderPizzas(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.chatbot.ChatbotTest@296e281a] output=Get Started button is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="verifyBotResponseWhenPizzaTypeIsNotListed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:27 IST" name="verifyBotResponseWhenPizzaTypeIsNotListed" description="Verify bot response when pizza type is not listed" data-provider="pizzaType" finished-at="2024-01-31T14:43:34 IST" duration-ms="7281" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[partha]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[partha.senuwsb@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[I would like to order a non veg pizza]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[chicken tikka]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[i am sorry ,  could'nt Understand , Try Again .]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [i am sorry ,  could'nt Understand , Try Again .] but found [i am sorry , I could'nt Understand , Try Again .]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [i am sorry ,  could'nt Understand , Try Again .] but found [i am sorry , I could'nt Understand , Try Again .]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.chatbot.ChatbotTest.verifyBotResponseWhenPizzaTypeIsNotListed(ChatbotTest.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[message sent]]>
            </line>
            <line>
              <![CDATA[message sent]]>
            </line>
            <line>
              <![CDATA[This is failed log from reporter.log]]>
            </line>
            <line>
              <![CDATA[</br><font color='#73a9d0'>***************Screenshot Of the error****************</font>]]>
            </line>
            <line>
              <![CDATA[</br><img id='ErrorResult' src='/Users/parthasen/Documents/UI_Automation/AvaamoChatBotUIAutomation/screenshots/verifyBotResponseWhenPizzaTypeIsNotListed31/01/2024 14:43:34.pngheight='800', width='800'/>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyBotResponseWhenPizzaTypeIsNotListed -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:34 IST" name="screenShot" finished-at="2024-01-31T14:43:34 IST" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBotResponseWhenPizzaTypeIsNotListed status=FAILURE method=ChatbotTest.verifyBotResponseWhenPizzaTypeIsNotListed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.chatbot.ChatbotTest@296e281a] output=message sent]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="verifyThatUserCanCancelOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:34 IST" name="verifyThatUserCanCancelOrder" description="Verify that user can cancel order" data-provider="orderPizza" finished-at="2024-01-31T14:43:46 IST" duration-ms="11887" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[partha]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[partha.senuwsb@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[I would like to order a non veg pizza]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pepperoni]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thick Crust]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Medium]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Excellent]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[message sent]]>
            </line>
            <line>
              <![CDATA[pizza type is selected]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyThatUserCanCancelOrder -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:46 IST" name="screenShot" finished-at="2024-01-31T14:43:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThatUserCanCancelOrder status=SUCCESS method=ChatbotTest.verifyThatUserCanCancelOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.chatbot.ChatbotTest@296e281a] output=message sent]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="verifyThatUserCanResetContextIinBetweenOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:46 IST" name="verifyThatUserCanResetContextIinBetweenOrder" description="Verify that user can reset context in between order" data-provider="pizzaType" finished-at="2024-01-31T14:43:49 IST" duration-ms="2873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[partha]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[partha.senuwsb@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[I would like to order a non veg pizza]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[chicken tikka]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[i am sorry ,  could'nt Understand , Try Again .]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[message sent]]>
            </line>
            <line>
              <![CDATA[pizza type is selected]]>
            </line>
            <line>
              <![CDATA[conversation reset]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyThatUserCanResetContextIinBetweenOrder -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:49 IST" name="screenShot" finished-at="2024-01-31T14:43:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThatUserCanResetContextIinBetweenOrder status=SUCCESS method=ChatbotTest.verifyThatUserCanResetContextIinBetweenOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.chatbot.ChatbotTest@296e281a] output=message sent]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="verifyBotResponseBySendingOneAlphabeticCharacter(java.lang.String)[pri:5, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:49 IST" name="verifyBotResponseBySendingOneAlphabeticCharacter" description="Verify bot response by sending just one alphabetic character" data-provider="botResponse" finished-at="2024-01-31T14:43:58 IST" duration-ms="8704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Login Successful]]>
            </line>
            <line>
              <![CDATA[conversation reset]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyBotResponseBySendingOneAlphabeticCharacter -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:58 IST" name="screenShot" finished-at="2024-01-31T14:43:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBotResponseBySendingOneAlphabeticCharacter status=SUCCESS method=ChatbotTest.verifyBotResponseBySendingOneAlphabeticCharacter(java.lang.String)[pri:5, instance:com.chatbot.ChatbotTest@296e281a] output=Login Successful]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.chatbot.ChatbotTest@296e281a]" started-at="2024-01-31T14:43:58 IST" name="tearDown" finished-at="2024-01-31T14:43:58 IST" duration-ms="188" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Browser Closed]]>
            </line>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.chatbot.ChatbotTest -->
    </test> <!-- ChatbotTest -->
  </suite> <!-- SeleniumSuite -->
</testng-results>
